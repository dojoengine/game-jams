// Generated by dojo-bindgen on Fri, 5 Apr 2024 08:48:48 +0000. Do not modify this file manually.
using System;
using Dojo;
using Dojo.Starknet;

// Type definition for `dojo_starter::models::property::Property` struct
[Serializable]
public struct Property {
    public BaseProperty cur_property;
    public BaseProperty round_begin_buff;
    public BaseProperty round_begin_debuff;
    public BaseProperty round_end_buff;
    public BaseProperty round_end_debuff;
}

// Type definition for `dojo_starter::models::property::BaseProperty` struct
[Serializable]
public struct BaseProperty {
    public uint hp;
    public uint max_hp;
    public uint energy;
    public uint max_energy;
    public uint armor;
    public uint power;
    public uint fragile;
    public uint weak;
    public uint fear;
    public uint maintain_armor;
}

// Type definition for `core::integer::u256` struct
[Serializable]
public struct U256 {
    public BigInteger low;
    public BigInteger high;
}

// Type definition for `dojo_starter::models::stage::StageCategory` enum
public enum StageCategory {
    None,
    Normal,
    Boss,
    Camp,
    Cave,
    Idol,
}

// Type definition for `dojo_starter::models::role::RoleCategory` enum
public enum RoleCategory {
    None,
    Warrior,
    Rogue,
    Mage,
}


// Model definition for `dojo_starter::models::role::Role` model
public class Role : ModelInstance {
    [ModelField("player")]
    public FieldElement player;

    [ModelField("seed")]
    public ulong seed;

    [ModelField("cur_stage")]
    public uint cur_stage;

    [ModelField("stage_category")]
    public StageCategory stage_category;

    [ModelField("category")]
    public RoleCategory category;

    [ModelField("gold")]
    public uint gold;

    [ModelField("card_slot")]
    public U256 card_slot;

    [ModelField("blessing_slot")]
    public U256 blessing_slot;

    [ModelField("property")]
    public Property property;

    // Start is called before the first frame update
    void Start() {
    }

    // Update is called once per frame
    void Update() {
    }
}
        